(function() {
  var LocalOutput, inspect,
    slice = [].slice;

  inspect = require('../../libs/better_inspect').inspect;

  LocalOutput = (function() {
    function LocalOutput() {}

    LocalOutput.prototype.output = [];

    LocalOutput.prototype.send = console.log.bind(console);

    LocalOutput.prototype.prettySend = function() {
      var arg, fullOutput, lines;
      fullOutput = ((function() {
        var i, len, results;
        results = [];
        for (i = 0, len = arguments.length; i < len; i++) {
          arg = arguments[i];
          results.push(inspect(arg, false, 2, true));
        }
        return results;
      }).apply(this, arguments)).join("\n");
      lines = fullOutput.split("\n");
      if (lines.length > process.stdout.rows - 2) {
        return console.log(lines.slice(0, process.stdout.rows - 3).concat(["more lines here..."]).join("\n"));
      } else {
        return console.log(fullOutput);
      }
    };

    LocalOutput.prototype.add = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return this.output.push(args.join(' '));
    };

    LocalOutput.prototype.sendAll = function() {
      this.send(this.output.join('\n'));
      return this.output = [];
    };

    return LocalOutput;

  })();

  module.exports = LocalOutput;

}).call(this);
